(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[162],{3905:function(t,e,n){"use strict";n.d(e,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var s=r.createContext({}),u=function(t){var e=r.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},c=function(t){var e=u(t.components);return r.createElement(s.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,i=t.originalType,s=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),d=u(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(f,o(o({ref:e},c),{},{components:n})):r.createElement(f,o({ref:e},c))}));function m(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l.mdxType="string"==typeof t?t:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},601:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),o=["components"],l={slug:"/",title:"Getting started",sidebar_label:"Getting started"},s="Getting started",u={unversionedId:"getting-started",id:"getting-started",isDocsHomePage:!1,title:"Getting started",description:"ReScript Test is a lightweight test framework with:",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/",permalink:"/rescript-test/",editUrl:"https://github.com/bloodyowl/rescript-test/edit/main/docs/docs/getting-started.md",version:"current",frontMatter:{slug:"/",title:"Getting started",sidebar_label:"Getting started"},sidebar:"docs",next:{title:"Installation",permalink:"/rescript-test/installation"}},c=[],p={toc:c};function d(t){var e=t.components,n=(0,a.Z)(t,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"getting-started"},"Getting started"),(0,i.kt)("p",null,"ReScript Test is a lightweight test framework with:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"A minimal API surface"),": reduces the mental overhead"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Built-in extensibility"),": so that you can create your own building blocks"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Native node.js & opt-in DOM testing"),": to fit all your needs"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Speed"),": we don't embed anything fancy, it just makes your tests run fast"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"A clear output"),": your test results are easy to read")),(0,i.kt)("img",{width:"1166",height:"744",alt:"Test output screenshot",src:"https://user-images.githubusercontent.com/1688645/113517422-28ee7200-9580-11eb-9e84-4f9de3c75069.png"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="AsyncData_test.res"',title:'"AsyncData_test.res"'},'test("AsyncData getExn", () => {\n  throws(() => getExn(NotAsked))\n  throws(() => getExn(Loading))\n  doesNotThrow(() => {\n    let _ = getExn(Done(1))\n  })\n})\n\ntest("AsyncData mapWithDefaultU", () => {\n  intEqual(NotAsked->mapWithDefaultU(0, (. value) => value + 1), 0)\n  intEqual(Loading->mapWithDefaultU(0, (. value) => value + 1), 0)\n  intEqual(Done(1)->mapWithDefaultU(0, (. value) => value + 1), 2)\n})\n\ntest("AsyncData mapWithDefault", () => {\n  intEqual(NotAsked->mapWithDefault(0, value => value + 1), 0)\n  intEqual(Loading->mapWithDefault(0, value => value + 1), 0)\n  intEqual(Done(1)->mapWithDefault(0, value => value + 1), 2)\n})\n\ntest("AsyncData mapU", () => {\n  asyncDataEqual(NotAsked->mapU((. value) => value + 1), NotAsked)\n  asyncDataEqual(Loading->mapU((. value) => value + 1), Loading)\n  asyncDataEqual(Done(1)->mapU((. value) => value + 1), Done(2))\n})\n')))}d.isMDXComponent=!0}}]);